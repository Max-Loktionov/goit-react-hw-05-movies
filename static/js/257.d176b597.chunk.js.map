{"version":3,"file":"static/js/257.d176b597.chunk.js","mappings":"2TAEMA,EAAQ,+BACRC,EAAM,mCAECC,EAAW,mCAAG,6FACnBC,EADmB,UACVH,EADU,wCAC8BC,GAD9B,SAEFG,GAAAA,CAAMD,GAFJ,cAEnBE,EAFmB,yBAIlBA,EAASC,KAAKC,SAJI,2CAAH,qDAOXC,EAAiB,mCAAG,WAAMC,GAAN,kFACzBC,EAAcD,EACdN,EAFyB,UAEhBH,EAFgB,iCAEiBC,EAFjB,kBAE8BS,GAF9B,SAGRN,GAAAA,CAAMD,GAHE,cAGzBE,EAHyB,yBAKxBA,EAASC,KAAKC,SALU,2CAAH,sDAQjBI,EAAiB,mCAAG,WAAMC,GAAN,kFACzBC,EAAUD,EACVT,EAFyB,UAEhBH,EAFgB,kBAEEa,EAFF,oBAEqBZ,GAFrB,SAGRG,GAAAA,CAAMD,GAHE,cAGzBE,EAHyB,yBAKxBA,EAASC,MALe,2CAAH,sDAQjBQ,EAAS,mCAAG,WAAMF,GAAN,kFACjBC,EAAUD,EACVT,EAFiB,UAERH,EAFQ,kBAEUa,EAFV,4BAEqCZ,EAFrC,gCAGAG,GAAAA,CAAMD,GAHN,cAGjBE,EAHiB,yBAKhBA,EAASC,KAAKS,MALE,2CAAH,sDAQTC,EAAY,mCAAG,WAAMJ,GAAN,kFACpBC,EAAUD,EACVT,EAFoB,UAEXH,EAFW,kBAEOa,EAFP,4BAEkCZ,GAFlC,SAGHG,GAAAA,CAAMD,GAHH,cAGpBE,EAHoB,yBAKnBA,EAASC,KAAKC,SALK,2CAAH,uD,gKChBZU,GAlBMC,EAAAA,GAAAA,IAAH,0JASOA,EAAAA,GAAAA,IAAH,0CAIKA,EAAAA,GAAAA,IAAH,8DAKFA,EAAAA,GAAAA,GAAH,mH,UClBJC,EAAMD,EAAAA,GAAAA,IAAH,0JASHE,EAAUF,EAAAA,GAAAA,IAAH,0CAIPG,EAAYH,EAAAA,GAAAA,IAAH,8D,mBCXP,SAASI,EAAT,GAQX,IAPFC,EAOC,EAPDA,YACAC,EAMC,EANDA,MACAC,EAKC,EALDA,SACAC,EAIC,EAJDA,aACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,aACAC,EACC,EADDA,OAIA,OACE,UAAC,EAAD,WACGN,GACC,gBAAKO,IAAG,UALD,oCAKC,OAAYP,GAAeQ,IAAKP,KAExC,gBAAKM,IAAKE,EAASD,IAAKP,KAE1B,UAAC,EAAD,YACE,wBAAKA,KACL,uBAAIC,KACJ,UAAC,EAAD,YACE,mCAAWC,MACX,wCAAgBC,KACfC,IAAgB,0CAAkBA,MAC5B,OAANC,QAAM,IAANA,OAAA,EAAAA,EAAQI,QAAS,IAChB,oCAAYJ,EAAOK,KAAI,qBAAGC,QAAiBC,KAAK,kBCvB7C,SAASC,IAAgB,IAAD,QACrC,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQ3B,GAAY4B,EAAAA,EAAAA,MAAZ5B,QACF6B,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACQ,OAAZ/B,GAGJgC,EAAAA,GAA2BhC,GAASiC,KAAKN,KACxC,CAAC3B,IACJ,IACEU,EAOEgB,EAPFhB,YACAC,EAMEe,EANFf,MACAC,EAKEc,EALFd,SACAC,EAIEa,EAJFb,aACAC,EAGEY,EAHFZ,WACAC,EAEEW,EAFFX,aACAC,EACEU,EADFV,OAEF,OACE,iCACE,SAAC,KAAD,CAAMkB,GAAE,iBAAEL,QAAF,IAAEA,GAAF,UAAEA,EAAUM,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,IAAnC,qBACCV,IACC,iCACE,SAACjB,EAAD,CACEC,YAAaA,EACbC,MAAOA,EACPC,SAAUA,EACVC,aAAcA,EACdC,WAAYA,EACZC,aAAcA,EACdC,OAAQA,KAGV,UAACZ,EAAD,YACE,yBACE,SAAC,KAAD,CAAM8B,GAAG,OAAOC,MAAO,CAAEC,KAAI,UAAEP,EAASM,MAAMC,YAAjB,QAAyB,KAAtD,gCAKF,yBACE,SAAC,KAAD,CAAMF,GAAG,UAAUC,MAAO,CAAEC,KAAI,UAAEP,EAASM,MAAMC,YAAjB,QAAyB,KAAzD,0CAKJ,SAAC,EAAAC,SAAD,CAAUC,UAAU,SAAC,IAAD,CAAiBC,MAAM,YAA3C,UACE,SAAC,KAAD,c","sources":["services/movieAPI.js","views/MovieDetails/MovieDetails.styled.js","components/CardDetailsInfo/CardDetailsInfo.styled.js","components/CardDetailsInfo/CardDetailsInfo.jsx","views/MovieDetails/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = `https://api.themoviedb.org/3`;\nconst KEY = '476dab1d501621899284a1a134c160d7';\n\nexport const fetchTrends = async () => {\n  const url = `${BASE_URL}/trending/movie/week?api_key=${KEY}`;\n  const response = await axios(url);\n\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async query => {\n  const searchQuery = query;\n  const url = `${BASE_URL}/search/movie?api_key=${KEY}&query=${searchQuery}`;\n  const response = await axios(url);\n\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const movieId = id;\n  const url = `${BASE_URL}/movie/${movieId}?api_key=${KEY}`;\n  const response = await axios(url);\n\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const movieId = id;\n  const url = `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}&page=1&per_page=18`;\n  const response = await axios(url);\n\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const movieId = id;\n  const url = `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`;\n  const response = await axios(url);\n\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const Box = styled.div`\n  display: flex;\n  height: 450px;\n  padding: 12px;\n  color: #2a363b;\n  font-size: 20px;\n  border-bottom: #2a363b 1px solid;\n`;\n\nexport const TextBox = styled.div`\n  padding: 24px;\n`;\n\nexport const Statistic = styled.div`\n  padding: 24px;\n  color: darkcyan;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: space-around;\n  padding: 12px;\n  font-size: 24px;\n`;\n","import styled from 'styled-components';\n\nexport const Box = styled.div`\n  display: flex;\n  height: 450px;\n  padding: 12px;\n  color: #2a363b;\n  font-size: 20px;\n  border-bottom: #2a363b 1px solid;\n`;\n\nexport const TextBox = styled.div`\n  padding: 24px;\n`;\n\nexport const Statistic = styled.div`\n  padding: 24px;\n  color: darkcyan;\n`;\n","import PropTypes from 'prop-types';\nimport { Box, TextBox, Statistic } from './CardDetailsInfo.styled';\nimport noImage from 'views/no-image-icon-23485.png';\n\nexport default function CardDetailsInfo({\n  poster_path,\n  title,\n  overview,\n  vote_average,\n  vote_count,\n  release_date,\n  genres,\n}) {\n  const path = 'https://image.tmdb.org/t/p/w500/';\n\n  return (\n    <Box>\n      {poster_path ? (\n        <img src={`${path}${poster_path}`} alt={title} />\n      ) : (\n        <img src={noImage} alt={title} />\n      )}\n      <TextBox>\n        <h2>{title}</h2>\n        <p>{overview}</p>\n        <Statistic>\n          <p> Vote: {vote_average}</p>\n          <p>Total vote: {vote_count}</p>\n          {release_date && <p>Release date: {release_date}</p>}\n          {genres?.length > 0 && (\n            <p>Genres: {genres.map(({ name }) => name).join(', ')}</p>\n          )}\n        </Statistic>\n      </TextBox>\n    </Box>\n  );\n}\n\nCardDetailsInfo.propTypes = {\n  poster_path: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  vote_average: PropTypes.number.isRequired,\n  vote_count: PropTypes.number.isRequired,\n  overview: PropTypes.string.isRequired,\n  release_date: PropTypes.string,\n  genres: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n    })\n  ),\n};\n","import { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useEffect, useState, Suspense } from 'react';\nimport PropagateLoader from 'react-spinners/PropagateLoader';\nimport { List } from './MovieDetails.styled';\nimport * as movieAPI from '../../services/movieAPI';\nimport CardDetailsInfo from 'components/CardDetailsInfo';\n\nexport default function MovieDetails() {\n  const [details, setDetails] = useState([]);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (movieId === null) {\n      return;\n    }\n    movieAPI.fetchMovieDetails(movieId).then(setDetails);\n  }, [movieId]);\n  const {\n    poster_path,\n    title,\n    overview,\n    vote_average,\n    vote_count,\n    release_date,\n    genres,\n  } = details;\n  return (\n    <>\n      <Link to={location?.state?.from ?? '/'}>Go Back</Link>\n      {details && (\n        <>\n          <CardDetailsInfo\n            poster_path={poster_path}\n            title={title}\n            overview={overview}\n            vote_average={vote_average}\n            vote_count={vote_count}\n            release_date={release_date}\n            genres={genres}\n          />\n\n          <List>\n            <li>\n              <Link to=\"cast\" state={{ from: location.state.from ?? '/' }}>\n                Read about cast\n              </Link>\n            </li>\n\n            <li>\n              <Link to=\"reviews\" state={{ from: location.state.from ?? '/' }}>\n                Go through the reviews\n              </Link>\n            </li>\n          </List>\n          <Suspense fallback={<PropagateLoader color=\"#41d61f\" />}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["BASE_URL","KEY","fetchTrends","url","axios","response","data","results","fetchSearchMovies","query","searchQuery","fetchMovieDetails","id","movieId","fetchCast","cast","fetchReviews","List","styled","Box","TextBox","Statistic","CardDetailsInfo","poster_path","title","overview","vote_average","vote_count","release_date","genres","src","alt","noImage","length","map","name","join","MovieDetails","useState","details","setDetails","useParams","location","useLocation","useEffect","movieAPI","then","to","state","from","Suspense","fallback","color"],"sourceRoot":""}