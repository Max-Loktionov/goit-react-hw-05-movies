{"version":3,"file":"static/js/301.f8b67bc5.chunk.js","mappings":"2TAEMA,EAAQ,+BACRC,EAAM,mCAECC,EAAW,mCAAG,6FACnBC,EADmB,UACVH,EADU,wCAC8BC,GAD9B,SAEFG,GAAAA,CAAMD,GAFJ,cAEnBE,EAFmB,yBAIlBA,EAASC,KAAKC,SAJI,2CAAH,qDAOXC,EAAiB,mCAAG,WAAMC,GAAN,kFACzBC,EAAcD,EACdN,EAFyB,UAEhBH,EAFgB,iCAEiBC,EAFjB,kBAE8BS,GAF9B,SAGRN,GAAAA,CAAMD,GAHE,cAGzBE,EAHyB,yBAKxBA,EAASC,KAAKC,SALU,2CAAH,sDAQjBI,EAAiB,mCAAG,WAAMC,GAAN,kFACzBC,EAAUD,EACVT,EAFyB,UAEhBH,EAFgB,kBAEEa,EAFF,oBAEqBZ,GAFrB,SAGRG,GAAAA,CAAMD,GAHE,cAGzBE,EAHyB,yBAKxBA,EAASC,MALe,2CAAH,sDAQjBQ,EAAS,mCAAG,WAAMF,GAAN,kFACjBC,EAAUD,EACVT,EAFiB,UAERH,EAFQ,kBAEUa,EAFV,4BAEqCZ,EAFrC,gCAGAG,GAAAA,CAAMD,GAHN,cAGjBE,EAHiB,yBAKhBA,EAASC,KAAKS,MALE,2CAAH,sDAQTC,EAAY,mCAAG,WAAMJ,GAAN,kFACpBC,EAAUD,EACVT,EAFoB,UAEXH,EAFW,kBAEOa,EAFP,4BAEkCZ,GAFlC,SAGHG,GAAAA,CAAMD,GAHH,cAGpBE,EAHoB,yBAKnBA,EAASC,KAAKC,SALK,2CAAH,uD,sIClCZU,EAAUC,EAAAA,GAAAA,GAAH,4NAUPC,EAAWD,EAAAA,GAAAA,GAAH,oMAMRE,EAAQF,EAAAA,GAAAA,IAAH,wG,mBCZH,SAASG,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOP,EAAP,KAAaQ,EAAb,KACQV,GAAYW,EAAAA,EAAAA,MAAZX,QAUR,OAPAY,EAAAA,EAAAA,YAAU,WACQ,OAAZZ,IAGJC,EAAAA,EAAAA,GAAUD,GAASa,KAAKH,KACvB,CAACV,KAGF,6BACGE,IACC,SAACE,EAAD,UACGF,EAAKY,KAAI,SAAAC,GAAI,OACZ,UAACT,EAAD,WACGS,EAAKC,cACJ,SAACT,EAAD,CAAOU,IAAG,UAhBX,mCAgBW,OAAYF,EAAKC,cAAgBE,IAAKH,EAAKI,QAErD,SAACZ,EAAD,CAAOU,IAAKG,EAASF,IAAKH,EAAKI,QAEjC,uCAAeJ,EAAKM,cACpB,kCAAUN,EAAKI,UAPFJ,EAAKhB,a","sources":["services/movieAPI.js","views/Cast/Cast.styled.js","views/Cast/Cast.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = `https://api.themoviedb.org/3`;\nconst KEY = '476dab1d501621899284a1a134c160d7';\n\nexport const fetchTrends = async () => {\n  const url = `${BASE_URL}/trending/movie/week?api_key=${KEY}`;\n  const response = await axios(url);\n\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async query => {\n  const searchQuery = query;\n  const url = `${BASE_URL}/search/movie?api_key=${KEY}&query=${searchQuery}`;\n  const response = await axios(url);\n\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const movieId = id;\n  const url = `${BASE_URL}/movie/${movieId}?api_key=${KEY}`;\n  const response = await axios(url);\n\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const movieId = id;\n  const url = `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}&page=1&per_page=18`;\n  const response = await axios(url);\n\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const movieId = id;\n  const url = `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`;\n  const response = await axios(url);\n\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.ul`\n  display: grid;\n  max-width: 1140px;\n  grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));\n  grid-gap: 12px;\n  justify-content: center;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const CastItem = styled.li`\n  padding: 8px;\n  border-radius: 16px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\nexport const Photo = styled.img`\n  height: 225px;\n  width: 150px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from 'services/movieAPI';\nimport { Wrapper, Photo, CastItem } from './Cast.styled';\nimport noImage from '../no-image-icon-23485.png';\n\nexport default function Cast() {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n  const path = 'https://image.tmdb.org/t/p/w154';\n\n  useEffect(() => {\n    if (movieId === null) {\n      return;\n    }\n    fetchCast(movieId).then(setCast);\n  }, [movieId]);\n\n  return (\n    <section>\n      {cast && (\n        <Wrapper>\n          {cast.map(item => (\n            <CastItem key={item.id}>\n              {item.profile_path ? (\n                <Photo src={`${path}${item.profile_path}`} alt={item.name} />\n              ) : (\n                <Photo src={noImage} alt={item.name} />\n              )}\n              <p>Character: {item.character}</p>\n              <p>Name: {item.name}</p>\n            </CastItem>\n          ))}\n        </Wrapper>\n      )}\n    </section>\n  );\n}\n"],"names":["BASE_URL","KEY","fetchTrends","url","axios","response","data","results","fetchSearchMovies","query","searchQuery","fetchMovieDetails","id","movieId","fetchCast","cast","fetchReviews","Wrapper","styled","CastItem","Photo","Cast","useState","setCast","useParams","useEffect","then","map","item","profile_path","src","alt","name","noImage","character"],"sourceRoot":""}