{"version":3,"file":"static/js/869.2b4bfb44.chunk.js","mappings":"4MAWaA,GATMC,EAAAA,GAAAA,IAAH,uQASOA,EAAAA,GAAAA,GAAH,6N,GAUAA,EAAAA,GAAAA,EAAH,iHAOKA,EAAAA,GAAAA,IAAH,6K,kBC1BNC,EAAMD,EAAAA,GAAAA,IAAH,uQAUHE,EAAOF,EAAAA,GAAAA,EAAH,iHAOJG,EAASH,EAAAA,GAAAA,IAAH,6K,mBCdJ,SAASI,EAAT,GAAgE,IAAzCC,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,aAEtDC,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,SAAC,KAAD,CAAMC,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMJ,GAA1C,UACE,UAAC,EAAD,YACE,yBACGJ,GACC,SAAC,EAAD,CAAQS,IAAG,UARV,mCAQU,OAAYT,GAAeU,IAAKT,KAE3C,SAAC,EAAD,CAAQQ,IAAKE,EAASD,IAAKT,OAG/B,SAAC,EAAD,UAAOA,KACP,SAAC,EAAD,UAAOE,GAAgB,IAAIS,KAAKT,GAAcU,uBChBzC,SAASC,EAAT,GAA8B,IAAXC,EAAU,EAAVA,OAChC,OACE,SAACrB,EAAD,UACGqB,GACCA,EAAOC,KAAI,SAAAC,GAAK,eACd,yBACE,SAAClB,EAAD,CACEC,YAAW,UAAEiB,EAAMjB,mBAAR,QAAuBiB,EAAMjB,YACxCC,MAAOgB,EAAMhB,MACbC,GAAIe,EAAMf,GACVC,aAAY,UAAEc,EAAMd,oBAAR,QAAwBc,EAAMd,gBALrCc,EAAMf,W,yMCPnBgB,EAAQ,+BACRC,EAAM,mCAECC,EAAW,mCAAG,6FACnBC,EADmB,UACVH,EADU,wCAC8BC,GAD9B,SAEFG,GAAAA,CAAMD,GAFJ,cAEnBE,EAFmB,yBAIlBA,EAASC,KAAKC,SAJI,2CAAH,qDAOXC,EAAiB,mCAAG,WAAMC,GAAN,kFACzBC,EAAcD,EACdN,EAFyB,UAEhBH,EAFgB,iCAEiBC,EAFjB,kBAE8BS,GAF9B,SAGRN,GAAAA,CAAMD,GAHE,cAGzBE,EAHyB,yBAKxBA,EAASC,KAAKC,SALU,2CAAH,sDAQjBI,EAAiB,mCAAG,WAAM3B,GAAN,kFACzB4B,EAAU5B,EACVmB,EAFyB,UAEhBH,EAFgB,kBAEEY,EAFF,oBAEqBX,GAFrB,SAGRG,GAAAA,CAAMD,GAHE,cAGzBE,EAHyB,yBAKxBA,EAASC,MALe,2CAAH,sDAQjBO,EAAS,mCAAG,WAAM7B,GAAN,kFACjB4B,EAAU5B,EACVmB,EAFiB,UAERH,EAFQ,kBAEUY,EAFV,4BAEqCX,EAFrC,gCAGAG,GAAAA,CAAMD,GAHN,cAGjBE,EAHiB,yBAKhBA,EAASC,KAAKQ,MALE,2CAAH,sDAQTC,EAAY,mCAAG,WAAM/B,GAAN,kFACpB4B,EAAU5B,EACVmB,EAFoB,UAEXH,EAFW,kBAEOY,EAFP,4BAEkCX,GAFlC,SAGHG,GAAAA,CAAMD,GAHH,cAGpBE,EAHoB,yBAKnBA,EAASC,KAAKC,SALK,2CAAH,uD,sHChCV,SAASS,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOpB,EAAP,KAAeqB,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KAAuBC,KAAKH,KAC3B,KAGD,4BACE,gDACA,SAAC,IAAD,CAASrB,OAAQA,S","sources":["components/Gallery/Gallery.styled.js","components/GallaryItem/GallaryItem.styled.js","components/GallaryItem/GallaryItem.jsx","components/Gallery/Gallery.jsx","services/movieAPI.js","views/Home.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Box = styled.div`\n  height: 420px;\n  color: #2a363b;\n  border-radius: 8px;\n  margin: 24px auto;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n    rgba(0, 0, 0, 0.3) 0px 30px 60px -30px,\n    rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\n`;\nexport const Wrapper = styled.ul`\n  display: grid;\n  max-width: 1140px;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  grid-gap: 12px;\n  justify-content: center;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Text = styled.p`\n  font-size: 16px;\n  margin: 0 auto 12px auto;\n  padding: 4px;\n  text-align: center;\n`;\n\nexport const Poster = styled.img`\n  width: 216px;\n  margin-left: auto;\n  margin-right: auto;\n  object-fit: cover;\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n`;\n","import styled from 'styled-components';\n\nexport const Box = styled.div`\n  height: 420px;\n  color: #2a363b;\n  border-radius: 8px;\n  margin: 24px auto;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n    rgba(0, 0, 0, 0.3) 0px 30px 60px -30px,\n    rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\n`;\n\nexport const Text = styled.p`\n  font-size: 16px;\n  margin: 0 auto 12px auto;\n  padding: 4px;\n  text-align: center;\n`;\n\nexport const Poster = styled.img`\n  width: 216px;\n  margin-left: auto;\n  margin-right: auto;\n  object-fit: cover;\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Box, Text, Poster } from './GallaryItem.styled';\nimport noImage from 'views/no-image-icon-23485.png';\n\nexport default function GallaryItem({ poster_path, title, id, release_date }) {\n  const path = 'https://image.tmdb.org/t/p/w154';\n  const location = useLocation();\n  return (\n    <>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <Box>\n          <div>\n            {poster_path ? (\n              <Poster src={`${path}${poster_path}`} alt={title} />\n            ) : (\n              <Poster src={noImage} alt={title} />\n            )}\n          </div>\n          <Text>{title}</Text>\n          <Text>{release_date && new Date(release_date).getFullYear()}</Text>\n        </Box>\n      </Link>\n    </>\n  );\n}\n\nGallaryItem.propTypes = {\n  poster_path: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  release_date: PropTypes.string,\n  id: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { Wrapper } from './Gallery.styled';\nimport GallaryItem from 'components/GallaryItem';\n\nexport default function Gallery({ movies }) {\n  return (\n    <Wrapper>\n      {movies &&\n        movies.map(movie => (\n          <li key={movie.id}>\n            <GallaryItem\n              poster_path={movie.poster_path ?? movie.poster_path}\n              title={movie.title}\n              id={movie.id}\n              release_date={movie.release_date ?? movie.release_date}\n            />\n          </li>\n        ))}\n    </Wrapper>\n  );\n}\n\nGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n      release_date: PropTypes.string,\n    })\n  ),\n};\n","import axios from 'axios';\n\nconst BASE_URL = `https://api.themoviedb.org/3`;\nconst KEY = '476dab1d501621899284a1a134c160d7';\n\nexport const fetchTrends = async () => {\n  const url = `${BASE_URL}/trending/movie/week?api_key=${KEY}`;\n  const response = await axios(url);\n\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async query => {\n  const searchQuery = query;\n  const url = `${BASE_URL}/search/movie?api_key=${KEY}&query=${searchQuery}`;\n  const response = await axios(url);\n\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const movieId = id;\n  const url = `${BASE_URL}/movie/${movieId}?api_key=${KEY}`;\n  const response = await axios(url);\n\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const movieId = id;\n  const url = `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}&page=1&per_page=18`;\n  const response = await axios(url);\n\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const movieId = id;\n  const url = `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`;\n  const response = await axios(url);\n\n  return response.data.results;\n};\n","import { useEffect, useState } from 'react';\nimport * as movieAPI from '../services/movieAPI';\nimport Gallery from 'components/Gallery';\n\nexport default function Home() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    movieAPI.fetchTrends().then(setMovies);\n  }, []);\n\n  return (\n    <div>\n      <h1>Trends of the week</h1>\n      <Gallery movies={movies} />\n    </div>\n  );\n}\n"],"names":["Wrapper","styled","Box","Text","Poster","GallaryItem","poster_path","title","id","release_date","location","useLocation","to","state","from","src","alt","noImage","Date","getFullYear","Gallery","movies","map","movie","BASE_URL","KEY","fetchTrends","url","axios","response","data","results","fetchSearchMovies","query","searchQuery","fetchMovieDetails","movieId","fetchCast","cast","fetchReviews","Home","useState","setMovies","useEffect","movieAPI","then"],"sourceRoot":""}