{"version":3,"file":"static/js/910.63d974be.chunk.js","mappings":"2TAEMA,EAAQ,+BACRC,EAAM,mCAECC,EAAW,mCAAG,6FACnBC,EADmB,UACVH,EADU,wCAC8BC,GAD9B,SAEFG,GAAAA,CAAMD,GAFJ,cAEnBE,EAFmB,yBAIlBA,EAASC,KAAKC,SAJI,2CAAH,qDAOXC,EAAiB,mCAAG,WAAMC,GAAN,kFACzBC,EAAcD,EACdN,EAFyB,UAEhBH,EAFgB,iCAEiBC,EAFjB,kBAE8BS,GAF9B,SAGRN,GAAAA,CAAMD,GAHE,cAGzBE,EAHyB,yBAKxBA,EAASC,KAAKC,SALU,2CAAH,sDAQjBI,EAAiB,mCAAG,WAAMC,GAAN,kFACzBC,EAAUD,EACVT,EAFyB,UAEhBH,EAFgB,kBAEEa,EAFF,oBAEqBZ,GAFrB,SAGRG,GAAAA,CAAMD,GAHE,cAGzBE,EAHyB,yBAKxBA,EAASC,MALe,2CAAH,sDAQjBQ,EAAS,mCAAG,WAAMF,GAAN,kFACjBC,EAAUD,EACVT,EAFiB,UAERH,EAFQ,kBAEUa,EAFV,4BAEqCZ,EAFrC,gCAGAG,GAAAA,CAAMD,GAHN,cAGjBE,EAHiB,yBAKhBA,EAASC,KAAKS,MALE,2CAAH,sDAQTC,EAAY,mCAAG,WAAMJ,GAAN,kFACpBC,EAAUD,EACVT,EAFoB,UAEXH,EAFW,kBAEOa,EAFP,4BAEkCZ,GAFlC,SAGHG,GAAAA,CAAMD,GAHH,cAGpBE,EAHoB,yBAKnBA,EAASC,KAAKC,SALK,2CAAH,uD,mIClCZU,EAAUC,EAAAA,GAAAA,GAAH,6DAKPC,EAAcD,EAAAA,GAAAA,GAAH,qO,SC0BxB,MA5BA,WACE,OAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQT,GAAYU,EAAAA,EAAAA,MAAZV,QAMR,OAJAW,EAAAA,EAAAA,YAAU,YACRR,EAAAA,EAAAA,IAAaH,GAASY,KAAKH,KAC1B,CAACT,KAGF,gCACE,oCACCQ,EAAQK,OAAS,GAChB,SAACT,EAAD,UACGI,EAAQM,KAAI,SAAAC,GAAI,OACf,UAACT,EAAD,YACE,uBAAI,IAAIU,KAAKD,EAAKE,YAAYC,iBAC9B,6BAAKH,EAAKI,YACV,oCAAYJ,EAAKK,YAHDL,EAAKhB,UAQ3B","sources":["services/movieAPI.js","views/Reviews/Reviews.styled.js","views/Reviews/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = `https://api.themoviedb.org/3`;\nconst KEY = '476dab1d501621899284a1a134c160d7';\n\nexport const fetchTrends = async () => {\n  const url = `${BASE_URL}/trending/movie/week?api_key=${KEY}`;\n  const response = await axios(url);\n\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async query => {\n  const searchQuery = query;\n  const url = `${BASE_URL}/search/movie?api_key=${KEY}&query=${searchQuery}`;\n  const response = await axios(url);\n\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const movieId = id;\n  const url = `${BASE_URL}/movie/${movieId}?api_key=${KEY}`;\n  const response = await axios(url);\n\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const movieId = id;\n  const url = `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}&page=1&per_page=18`;\n  const response = await axios(url);\n\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const movieId = id;\n  const url = `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`;\n  const response = await axios(url);\n\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.ul`\n  display: grid;\n  grid-gap: 12px;\n`;\n\nexport const ReviewsItem = styled.li`\n  padding: 16px;\n  border-radius: 16px;\n  background-color: aliceblue;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'services/movieAPI';\nimport { Wrapper, ReviewsItem } from './Reviews.styled';\n\nfunction Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  return (\n    <section>\n      <h2>Reviews</h2>\n      {reviews.length > 0 ? (\n        <Wrapper>\n          {reviews.map(item => (\n            <ReviewsItem key={item.id}>\n              <p>{new Date(item.created_at).toUTCString()}</p>\n              <p> {item.content}</p>\n              <p>Author: {item.author}</p>\n            </ReviewsItem>\n          ))}\n        </Wrapper>\n      ) : (\n        <p>We cannot find any reviews</p>\n      )}\n    </section>\n  );\n}\n\nexport default Reviews;\n"],"names":["BASE_URL","KEY","fetchTrends","url","axios","response","data","results","fetchSearchMovies","query","searchQuery","fetchMovieDetails","id","movieId","fetchCast","cast","fetchReviews","Wrapper","styled","ReviewsItem","useState","reviews","setReviews","useParams","useEffect","then","length","map","item","Date","created_at","toUTCString","content","author"],"sourceRoot":""}